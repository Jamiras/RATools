<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.21022</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A29018E0-76BF-4873-A6F7-785FCEAC508F}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>RATools.Test</RootNamespace>
    <AssemblyName>RATools.Test</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <OldToolsVersion>3.5</OldToolsVersion>
    <UpgradeBackupLocation />
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>x86</PlatformTarget>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x86\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
    <OutputPath>bin\x86\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x86</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="PresentationCore">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="PresentationFramework">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Xml.Linq">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data.DataSetExtensions">
      <RequiredTargetFramework>3.5</RequiredTargetFramework>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase">
      <RequiredTargetFramework>3.0</RequiredTargetFramework>
    </Reference>
  </ItemGroup>
  <Choose>
    <When Condition="Exists('..\lib\Moq.dll')">
      <ItemGroup>
        <Reference Include="Moq">
          <HintPath>..\lib\Moq.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Moq">
          <HintPath>..\..\nUnit\Moq.dll</HintPath>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <Choose>
    <When Condition="Exists('..\lib\nunit.framework.dll')">
      <ItemGroup>
        <Reference Include="nunit.framework, Version=2.5.8.10295, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>..\lib\nunit.framework.dll</HintPath>
        </Reference>
        <Reference Include="nunit.mocks, Version=2.5.8.10295, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>..\lib\nunit.mocks.dll</HintPath>
        </Reference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="nunit.framework, Version=2.5.8.10295, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>..\..\nUnit\nunit.framework.dll</HintPath>
        </Reference>
        <Reference Include="nunit.mocks, Version=2.5.8.10295, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
          <SpecificVersion>False</SpecificVersion>
          <HintPath>..\..\nUnit\nunit.mocks.dll</HintPath>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Compile Include="Data\RequirementTests.cs" />
    <Compile Include="Data\FieldTests.cs" />
    <Compile Include="Parser\AchievementBuilderTests.cs" />
    <Compile Include="Parser\AchievementScriptInterpreterTests.cs" />
    <Compile Include="Parser\Functions\RichPresenceValueFunctionTests.cs" />
    <Compile Include="Parser\Functions\OnceFunctionTests.cs" />
    <Compile Include="Parser\Functions\RepeatedFunctionTests.cs" />
    <Compile Include="Parser\Internal\ArrayExpressionTests.cs" />
    <Compile Include="Parser\Internal\LeftRightExpressionBaseTests.cs" />
    <Compile Include="Parser\Internal\KeywordExpressionTests.cs" />
    <Compile Include="Parser\Internal\ExpressionGroupTests.cs" />
    <Compile Include="Parser\Internal\ExpressionBaseTests.cs" />
    <Compile Include="Parser\Internal\IndexedVariableExpressionTests.cs" />
    <Compile Include="Parser\Internal\InterpreterScopeTests.cs" />
    <Compile Include="Parser\Internal\CommentExpressionTests.cs" />
    <Compile Include="Parser\Internal\VariableExpressionTests.cs" />
    <Compile Include="Parser\Internal\StringConstantExpressionTests.cs" />
    <Compile Include="Parser\Internal\ReturnExpressionTests.cs" />
    <Compile Include="Parser\Internal\MathematicExpressionTests.cs" />
    <Compile Include="Parser\Internal\IntegerConstantExpressionTests.cs" />
    <Compile Include="Parser\Internal\IfExpressionTests.cs" />
    <Compile Include="Parser\Internal\FunctionDefinitionExpressionTests.cs" />
    <Compile Include="Parser\Internal\FunctionCallExpressionTests.cs" />
    <Compile Include="Parser\Internal\ForExpressionTests.cs" />
    <Compile Include="Parser\Internal\DictionaryExpressionTests.cs" />
    <Compile Include="Parser\Internal\ConditionalExpressionTests.cs" />
    <Compile Include="Parser\Internal\ComparisonExpressionTests.cs" />
    <Compile Include="Parser\Internal\AssignmentExpressionTests.cs" />
    <Compile Include="Parser\LocalAchievementsTests.cs" />
    <Compile Include="Parser\RegressionTests.cs" />
  </ItemGroup>
  <Choose>
    <When Condition="'$(SolutionFileName)' == 'RATools + Core.sln'">
      <ItemGroup>
        <ProjectReference Include="..\..\Core\Jamiras.Core.csproj">
          <Project>{4141f2ae-9e32-4a93-9fea-360a7dc7d97f}</Project>
          <Name>Jamiras.Core</Name>
        </ProjectReference>
      </ItemGroup>
    </When>
    <Otherwise>
      <ItemGroup>
        <Reference Include="Jamiras.Core.dll">
          <HintPath>..\lib\Jamiras.Core.dll</HintPath>
          <Name>Jamiras.Core.dll</Name>
        </Reference>
      </ItemGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\RATools.csproj">
      <Project>{965d9b5a-9070-40e5-9eaa-edc581f0f000}</Project>
      <Name>RATools</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>